#+TITLE: Custom Language for Browser Automation

#+DESCRIPTION: A simple toy language to automate browser actions.

* Overview
language should be designed to automate browser interactions.

* Supported Actions
1) Open web pages
2) Identify elements
3) Read/extract values
4) Click buttons
5) filling fields

* Language specific features:
Branching
Looping
Error Handling
Variables storage/referencing
Structured syntax
- Runs on an Execution Layer or Interpreter:
   Minimal Error handling and logging
   Support for Async interactions
   use any browser automation library or headless browser



* Language Spec:
- Event Loop:
  By default every action is sync
  Explicitly define Async commands

- Syntax:
  1) Space seperated
  2) \n for line terminations
  3) Keywords start with capital letter
  4) variables name must start with lowercase

- Features:
  - Open <url>
  - Fill <#element> <value/variable>
  - Read <#element> ## push to stack/memory
  - Store <variable_name> ## pop stack and store value in variable_name
  - Extract <#element> <variable_name> ## directly extact value from element and store in variable_name
  - Click <#element> ## click button element
  - IF <this> Do <action> Else <other_action>
    - Jump <line_number:type:Int>:
            If <this> Do Jmp<line_number>
            if a==1 Do Jmp 1
            advance:
             if <this> Do Store a

* VM Spec:
- Python + asyncio (need to learn asyncio)
- Typescript (already familiar)
